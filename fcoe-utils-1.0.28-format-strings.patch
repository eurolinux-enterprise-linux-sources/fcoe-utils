diff --git a/fcnsq.c b/fcnsq.c
index 45dff40..c5b78b9 100644
--- a/fcnsq.c
+++ b/fcnsq.c
@@ -24,6 +24,7 @@
 #include <stdarg.h>
 #include <stdbool.h>
 #include <unistd.h>
+#include <inttypes.h>
 #include <string.h>
 #include <errno.h>
 #include <fcntl.h>
@@ -227,7 +228,7 @@ static int gpn_id(int bsg, u32 fcid)
 	rjt = gn_id(bsg, fcid, FC_NS_GPN_ID, &wwpn);
 	if (rjt)
 		goto fail;
-	print_result("Port Name", "%16.16llx\n", wwpn);
+	print_result("Port Name", "%16.16jx\n", (uintmax_t)wwpn);
 	return 0;
 fail:
 	if (rjt == (u16) ~0)
@@ -248,7 +249,7 @@ static int gnn_id(int bsg, u32 fcid)
 	rjt = gn_id(bsg, fcid, FC_NS_GNN_ID, &wwnn);
 	if (rjt)
 		goto fail;
-	print_result("Node Name", "%16.16llx\n", wwnn);
+	print_result("Node Name", "%16.16jx\n", (uintmax_t)wwnn);
 	return 0;
 fail:
 	if (rjt == (u16) ~0)
@@ -373,11 +374,12 @@ int main(int argc, char *argv[])
 {
 	char *bsg;
 	int bsg_dev;
-	u32 port_id;
-	u64 wwnn;
+	u32 port_id = 0;
+	u64 wwnn = 0;
 	int rc = 0;
 	enum commands cmd = 0;
 	char c;
+	uintmax_t wwnn_tmp = 0;
 
 	while(1) {
 		c = getopt_long_only(argc, argv, "", options, NULL);
@@ -402,7 +404,8 @@ int main(int argc, char *argv[])
 			if (cmd)
 				help(-1);
 			cmd = c;
-			sscanf(optarg, "%llx", &wwnn);
+			sscanf(optarg, "%jx", &wwnn_tmp);
+			wwnn = (u64)wwnn_tmp;
 			break;
 		}
 	}
diff --git a/fcoeadm_display.c b/fcoeadm_display.c
index e1cbd48..a6cf7a3 100644
--- a/fcoeadm_display.c
+++ b/fcoeadm_display.c
@@ -1426,8 +1426,8 @@ void print_fcoe_fcf_device(void *ep, void *arg)
 	if (!buf)
 		buf = temp;
 	printf("        Connection Mode:  %s\n", buf);
-	printf("        Fabric Name:      0x%016lx\n", fcf->fabric_name);
-	printf("        Switch Name       0x%016lx\n", fcf->switch_name);
+	printf("        Fabric Name:      0x%016" PRIx64 "\n", fcf->fabric_name);
+	printf("        Switch Name       0x%016" PRIx64 "\n", fcf->switch_name);
 	mac2str(fcf->mac, mac, MAX_STR_LEN);
 	printf("        MAC Address:      %s\n", mac);
 	printf("        FCF Priority:     %u\n", fcf->priority);
diff --git a/fcoemon.c b/fcoemon.c
index 80360fd..23fae9e 100644
--- a/fcoemon.c
+++ b/fcoemon.c
@@ -2640,7 +2640,7 @@ static void fcm_dcbd_get_oper(struct fcm_netif *ff, char *resp, char *cp)
 
 	if (ep) {
 		FCM_LOG_DEV(ff, "Invalid get oper response "
-			    "parse error byte %ld, resp %s", ep - cp, cp);
+			    "parse error byte %td, resp %s", ep - cp, cp);
 		fcm_dcbd_state_set(ff, FCD_ERROR);
 	} else {
 		if (val && fcoe_config.debug)
diff --git a/fcping.c b/fcping.c
index bc51d5f..f92516f 100644
--- a/fcping.c
+++ b/fcping.c
@@ -25,6 +25,7 @@
 #include <stddef.h>
 #include <stdarg.h>
 #include <unistd.h>
+#include <inttypes.h>
 #include <errno.h>
 #include <string.h>
 #include <time.h>
@@ -812,17 +813,17 @@ static void fp_check_data_len()
 	printf("Maximum ECHO data allowed by the Fabric (0x%06x) : %d bytes.\n"
 	       "Maximum ECHO data allowed by the Source (0x%06x) : %d bytes.\n"
 	       "Maximum ECHO data allowed by the Target (0x%06x) : %d bytes.\n"
-	       "Maximum ECHO data requested from user input (-s) : %lu "
+	       "Maximum ECHO data requested from user input (-s) : %" PRIu32 " "
 	       "(default %d) bytes.\n",
 	       FC_WKA_FABRIC_CONTROLLER, flen, sid, slen, fp_did, dlen,
-	       fp_len - FP_LEN_ECHO, FP_LEN_DEF);
+	       (uint32_t)(fp_len - FP_LEN_ECHO), FP_LEN_DEF);
 
 	/* fp_len is the total payload, including 4 bytes for ECHO command */
 	fp_len = MIN(fp_len, plen + FP_LEN_ECHO);
-	printf("Actual FC ELS ECHO data size used : %lu bytes.\n"
+	printf("Actual FC ELS ECHO data size used : %" PRIu32 " bytes.\n"
 	       "Actual FC ELS ECHO payload size used : %d bytes "
-	       "(including %ld bytes ECHO command).\n",
-	       fp_len - FP_LEN_ECHO, fp_len, FP_LEN_ECHO);
+	       "(including %zu bytes ECHO command).\n",
+	       (uint32_t)(fp_len - FP_LEN_ECHO), fp_len, FP_LEN_ECHO);
 }
 
 /*
